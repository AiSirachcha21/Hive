@using Hive.Shared.Projects.Queries

<style>
    /* opc = OrganizationProjectCard */
    .opc-text-bold {
        font-weight: 700;
    }
</style>

<MudCard>
    <MudCardContent>
        <div class="d-flex justify-between align-center">
            <div style="flex:1">
                <MudText Typo="Typo.h3" Class="opc-text-bold">@Project.Name</MudText>
                <MudText Typo="Typo.caption">@RemainingTickets Tickets Remaining</MudText>
            </div>
            <MudMenu Icon="@Icons.Filled.MoreVert">
                <MudMenuItem>
                    <div class="d-flex justify-between align-center">
                        <MudIcon Icon="@Icons.Filled.Edit" Class="mr-2" />
                        <MudText>Edit</MudText>
                    </div>
                </MudMenuItem>
                <MudMenuItem>
                    <div class="d-flex justify-between align-center">
                        <MudIcon Icon="@Icons.Filled.Delete" Class="mr-2" />
                        <MudText>Delete</MudText>
                    </div>
                </MudMenuItem>
            </MudMenu>
        </div>
        <MudDivider Class="my-2" />
        <div class="mt-4 mb-8">
            <MudText Color="Color.Primary" Class="d-flex mb-2">@(Progress)% <MudText Color="@(Color.Dark)" Class="ml-1">Completed</MudText></MudText>
            <MudProgressLinear Value="Progress" Color="Color.Primary" />
        </div>
        @if (!string.IsNullOrEmpty(Project.Description))
        {
            <MudText>@Project.Description</MudText>
        }
        <div class="d-flex justify-between">
            <div style="flex:1;">
                <MudText>Started</MudText>
                <MudText Class="opc-text-bold">@Project.CreatedAt.ToShortDateString()</MudText>
            </div>
            <div>
                <MudText>Finishing</MudText>
                <MudText Class="opc-text-bold">@Project.CreatedAt.ToShortDateString()</MudText>
            </div>
        </div>
        <MudDivider Class="my-4" />
        <div class="mx-2 mb-2">
            <MudText Class="opc-text-bold mb-2">Team</MudText>
            <MudAvatarGroup Max="4" Spacing="0">
                @foreach (var member in Project.Members.Take(Project.Members.Count > 4 ? 4 : Project.Members.Count))
                {
                    <MudAvatar>@member.Email.First().ToString().ToUpper()</MudAvatar>
                }
            </MudAvatarGroup>
        </div>
    </MudCardContent>
</MudCard>

@code {
    [Parameter] public ProjectViewModel Project { get; set; }
    int CreatedTickets => Project.ProjectStatistics.WorkItemsCreated;
    int RemainingTickets => Project.ProjectStatistics.WorkItemsCreated - Project.ProjectStatistics.WorkItemsCompleted;
    int Progress => CreatedTickets != 0 ? (RemainingTickets / CreatedTickets) * 100 : 100;
}