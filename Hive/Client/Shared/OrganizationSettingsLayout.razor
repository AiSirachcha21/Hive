@using Hive.Client.Components.ApplicationAppBar
@using Hive.Client.Shared.Store.Organizations
@using Hive.Shared.Organizations.QueryViewModels
@inherits Fluxor.Blazor.Web.Components.FluxorLayout;

<div class="page">
    <AuthorizeView>
        <Authorized>
            <MudLayout>
                <ApplicationAppBar />
                <MudDrawer ClipMode="DrawerClipMode.Always" Open="true">
                    <MudNavMenu>
                        <MudNavLink Href="@(Routes.OrganizationSettingsOverview(OrganizationId))">Overview</MudNavLink>
                        <MudNavLink Href="@(Routes.OrganizationSettingsUsers(OrganizationId))">Users</MudNavLink>
                    </MudNavMenu>
                </MudDrawer>
                <MudMainContent Class="px-6">
                    <div class="pt-4">
                        @Body
                    </div>
                </MudMainContent>
            </MudLayout>
        </Authorized>
        <Authorizing>
            <div class="container-fluid d-flex justify-content-center align-items-center">
                <div class="spinner-border" role="status"></div>
            </div>
        </Authorizing>
    </AuthorizeView>

</div>

@code {
    public Guid OrganizationId { get; set; }

    protected override void OnParametersSet()
    {
        object routeParam = null;
        if ((this.Body.Target as RouteView)?.RouteData.RouteValues?.TryGetValue("organizationId", out routeParam) == true)
        {
            Guid organizationId = Guid.Empty;
            Guid.TryParse(routeParam.ToString(), out organizationId);
            OrganizationId = organizationId;
        }
    }
}
