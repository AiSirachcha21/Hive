@page "/"
@page "/organizations"
@using Hive.Client.Components.OrganizationListCard
@using Hive.Client.Shared.Constants

@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<style>
    .text-bold {
        font-weight: 700;
    }

    .banner {
        height: 12.5vh;
        background: @Colors.Grey.Lighten4;
        display: flex;
        align-items: center;
        padding-left: 1rem;
        margin-bottom: 1rem;
        border-radius: 8px;
    }

    .org-item-viewIcon {
        transition: all ease-in-out 0.1s;
        transform: translateX(0);
    }

    .org-item:hover {
        cursor: pointer;
    }

        .org-item:hover .org-item-viewIcon {
            transform: translateX(4px);
        }

    .toolbar {
        width: 100%;
        display: flex;
        align-items: center;
    }

    .organizationCardSkeleton-Container {
        width: 25%;
    }
</style>

<AuthorizeView>
    <Authorized>
        <div class="banner">
            <MudAvatar Color="@Color.Secondary" Rounded="true" Class="mr-4">
                <MudIcon Icon="@Icons.Filled.Business" />
            </MudAvatar>
            <h1>Organizations</h1>
        </div>
        <div class="mb-8 toolbar">
            <MudTextField @bind-Value="@_searchText"
                          Label="Find an organization"
                          AdornmentIcon="@Icons.Outlined.Search"
                          Adornment="Adornment.Start"
                          Variant="Variant.Outlined"
                          Margin="Margin.Dense"
                          DebounceInterval="500"
                          Clearable="true" />
            <MudToolBar>
                @{
                    bool isListView = _gridViewModel == OrganizationListViewMode.List;
                    bool isGridView = _gridViewModel == OrganizationListViewMode.Grid;
                    Variant listVariant = isListView ? Variant.Filled : Variant.Text;
                    Variant gridVariant = isGridView ? Variant.Filled : Variant.Text;
                    string listIcon = isListView ? Icons.Filled.FormatListBulleted : Icons.Outlined.FormatListBulleted;
                    string gridIcon = isGridView ? Icons.Filled.GridView : Icons.Outlined.GridView;
                }
                <MudIconButton Variant="@listVariant"
                               Icon="@listIcon"
                               DisableElevation="true"
                               OnClick="()=>ToggleGridListView(OrganizationListViewMode.List)"
                               Color="!isGridView ? Color.Primary : Color.Default"
                               DisableRipple="true" />
                <MudIconButton Variant="@gridVariant"
                               Icon="@gridIcon"
                               DisableElevation="true"
                               OnClick="()=>ToggleGridListView(OrganizationListViewMode.Grid)"
                               Color="isGridView ? Color.Primary : Color.Default"
                               DisableRipple="true" />
            </MudToolBar>
            <MudButton StartIcon="@Icons.Outlined.Add"
                       Variant="Variant.Filled"
                       DisableElevation="true"
                       Color="Color.Primary"
                       Size="Size.Medium"
                       Class="ml-4"
                       OnClick="@ToggleAddOrganizationDialogAsync">
                Add Organization
            </MudButton>
        </div>
        @if (OrganizationStateIsLoading)
        {
            <MudGrid xs="12" Spacing="2">
                @for (var i = 0; i < 4; i++)
                {
                    <MudItem lg="3" Class="organizationCardSkeleton-Container">
                        <OrganizationListCardSkeleton />
                    </MudItem>
                }
            </MudGrid>
        }
        else if (!OrganizationStateIsLoading && Organizations.Count == 0)
        {
            <MudContainer Class="d-flex flex-column justify-center align-center" Style="min-height:30vh;">
                <MudText Typo="Typo.h2">
                    @(!string.IsNullOrEmpty(_searchText)
                ? "No organizations matching your search"
                : "There aren't any organizations")
                </MudText>
                <MudText Typo="Typo.h3">Add one to see it here</MudText>
            </MudContainer>
        }
        else
        {
            <MudGrid xs="12" Spacing="2">
                @foreach (var org in Organizations)
                {
                    <MudItem xs="12" sm="6" md="4" lg="3" Class="mb-4 org-item">
                        <OrganizationListCard Organization="org" />
                    </MudItem>
                }
            </MudGrid>
        }
    </Authorized>
</AuthorizeView>

